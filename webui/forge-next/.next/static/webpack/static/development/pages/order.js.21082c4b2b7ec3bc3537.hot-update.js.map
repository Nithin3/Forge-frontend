{"version":3,"file":"static/webpack/static/development/pages/order.js.21082c4b2b7ec3bc3537.hot-update.js","sources":["webpack:///./components/Orderform/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Form, FormGroup, Label, Input, FormText ,  InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Orderform.scss';\n\n\nexport default class Orderform extends Component{\n    constructor(props){\n             super(props);\n             this.props = props;\n             this.state = { email:'',order:'',description:'',quantity:'',metric:''};\n\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n             \n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n    \n      handleSubmit(event) {\n          console.log(this.state);\n        console.log(this.state.name);\n        console.log(this.state.order);  \n        alert('A name was submitted: ' + this.state.description);\n        var data = {\n                    \"$class\": \"org.forgesample.mynetwork.Item\",\n                    \"itemId\": '_' + Math.random().toString(36).substr(2, 9),\n                    \"NSN\": \"s\",\n                    \"serialNumber\": \"str\",\n                    \"description\": \"this is desc\",\n                    \"curentStatus\": \"str\",\n                    \"owner\": \"resource:org.forgesample.mynetwork.Owner#nithin\",\n                    \"transporter\": \"resource:org.forgesample.mynetwork.Transporter#ayan\"\n                  }\n            \n                  \n\n                axios.post('http://localhost:3000/api/org.forgesample.mynetwork.Item', data)\n                  .then(function(response){\n                      console.log(\"sent\");\n                      console.log(data);\n                    //console.log(response);\n                    //Perform action based on response\n                })\n                  .catch(function(error){\n                    console.log(error);\n                    //Perform action based on error\n                  });\n        event.preventDefault();\n      }\n    \n    render() {\n        return (\n            \n\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              email\n              <input type=\"text\" name = \"email\" value={this.state.email} onChange={this.handleChange} />\n            </label>\n            <label>\n              Order\n              <input type=\"text\" name=\"order\" value={this.state.order} onChange={this.handleChange} />\n            </label>\n\n            <label>\n              Description\n              <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n            </label>\n            \n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        );\n      }\n    }\n\n\n    // constructor(props){\n    //     super(props);\n    //     this.props = props;\n        \n    //     this.state = {\n    //         email:'',order:'',description:'',quantity:'',metric:''\n    //     };\n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.handleSubmit = this.handleSubmit.bind(this);\n\n    //     // this.state = {\n    //     //     formFields: {email:'', order:'', description:'', quantity:'', metric:''}\n    //     // }\n    //     // this.formHandler = this.formHandler.bind(this);\n\n    // }\n\n    // handleChange(event){\n        \n    //     this.setState({[event.target.name]: event.target.value});\n        \n    // }\n   \n    // handleSubmit(event) {\n    //     console.log(this.state.description);\n    //     alert('A name was submitted: '+' '+this.state.name+' '+this.state.description);\n    //     event.preventDefault();\n    // }\n    \n    // // handleChange = evt => {\n    // //     // This triggers everytime the input is changed\n    // //     this.setState({\n    // //         [e.target.name]: e.target.value\n    // //     });\n    // // };\n\n    // // handleSubmit(event) {\n    // //     event.preventDefault();\n    // //     const data = new FormData(event.target);\n    // //     console.log(data);\n    // //     fetch('orders', {\n    // //       method: 'POST',\n    // //       body: data,\n    // //     });\n    // //   }\n\n\n    // // handleSubmit = evt => {\n    // //     evt.preventDefault();\n    // //     //making a post request with the fetch API\n    // //     fetch('/orders', {\n    // //       method: 'POST',\n    // //       headers: {\n    // //             'Accept': 'application/json',\n    // //             'Content-Type': 'application/json'\n    // //       }, \n    // //       body: JSON.stringify({\n    // //            description:this.state.item-descript\n    // //          })\n    // //       })\n    // //       .then(response => response.json())\n    // //       .then(data => console.log(data))\n    // //       .catch(error => console.log(error))\n    // //    }\n    \n    \n    // // value={this.state.email-id} onChange={this.handleChange}\n    // // value={this.state.order-id} onChange={this.handleChange}\n    // // value={this.state.item-descript} onChange={this.handleChange}\n    // // value={this.state.quantity-items} onChange={this.handleChange}\n    // // value={this.state.metric-select} onChange={this.handleChange}\n\n    // inputChangeHandler(e) {\n    //     let formFields = {...this.state.formFields};\n    //     formFields[e.target.name] = e.target.value;\n    //     this.setState({\n    //      formFields\n    //     });\n    // }\n\n    // formHandler(formFields) {\n\n    //     console.log(\"backchodei\");\n    //     console.log(\"wtffffff\");\n    //     console.log(formFields);\n    //     console.log(\"behenchod\");\n    //     //this.setState({ [evt.target.name]: evt.target.value });\n    //     // var data = {\n    //     //     \"$class\": \"org.forgesample.mynetwork.Item\",\n    //     //     \"itemId\": '_' + Math.random().toString(36).substr(2, 9),\n    //     //     \"NSN\": \"s\",\n    //     //     \"serialNumber\": \"string\",\n    //     //     \"description\": \"hjtgykbj\",\n    //     //     \"curentStatus\": \"string\",\n    //     //     \"owner\": \"resource:org.forgesample.mynetwork.Owner#nithin\",\n    //     //     \"transporter\": \"resource:org.forgesample.mynetwork.Transporter#ayan\"\n    //     //   }\n\n    //     // axios.post('http://localhost:3000/api/org.forgesample.mynetwork.Item', data)\n    //     //   .then(function(response){\n    //     //       console.log(\"sent\");\n    //     //     //console.log(response);\n    //     //     //Perform action based on response\n    //     // })\n    //     //   .catch(function(error){\n    //     //     console.log(error);\n    //     //     //Perform action based on error\n    //     //   });\n    // }\n\n    // render(){\n    //     return (\n    //         <Form onsubmit={this.handleSubmit}>\n            \n    //             <FormGroup>\n    //                 <Input type=\"email\" name=\"email\" value={this.state.name} id=\"owneremail\" placeholder=\"Email\" onChange={this.handleChange} />\n    //             </FormGroup>\n    //             <FormGroup>\n    //                 <Input type=\"text\" name=\"order\" value={this.state.order} id=\"orderid\" placeholder=\"OrderID\" onChange={this.handleChange}  />\n    //             </FormGroup>\n    //             <FormGroup>\n    //                 <Input type=\"textarea\" name=\"description\" value={this.state.description} id=\"description\" placeholder=\"Order Details\" onChange={this.handleChange}  />\n    //             </FormGroup>\n    //             <InputGroup>\n    //                 <Input type=\"number\" name=\"quantity\" value={this.state.quantity} id=\"itemqty\" placeholder=\"Qty of units\" onChange={this.handleChange}  />\n    //                 <Input type=\"select\" name=\"metric\" value={this.state.metric} id=\"qtymetric\" onChange={this.handleChange} >\n    //                     <option value=\"kg\">Kilograms</option>\n    //                     <option value=\"g\">Grams</option>\n    //                     <option value=\"units\">Units</option>\n    //                 </Input>\n    //             </InputGroup>\n    //             <Button>Submit</Button>\n    //         </Form>\n    //     );\n    // }\n//}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AANA;AAQA;AACA;;;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA;AACA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;AApEA;AAysourceRoot":""}